@model CBLSummerBugTracker08042016.Models.CodeFirst.Ticket
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="normalheader transition animated fadeIn col-md-offset-3 col-md-6">
    <div class="hpanel">
        <div class="panel-body">
            <a class="small-header-action" href="">
                <div class="clip-header">
                    <i class="fa fa-arrow-up"></i>
                </div>
            </a>

           @using (Html.BeginForm("Edit", "Tickets", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Tickets</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DisplayFor(model => model.Created, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Created)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DisplayFor(model => model.Updated, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.HiddenFor(model => model.OwnerUserId)
                        @Html.LabelFor(model => model.OwnerUser, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.OwnerUser.DisplayName, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DisplayFor(model => model.OwnerUser.DisplayName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    @if ((User.IsInRole("Admin")) || (User.IsInRole("Project Manager")))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.HiddenFor(model => model.AssignedToUserId)
                                @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                    @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.DisplayFor(model => model.AssignedToUser.DisplayName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }


        </div>
    </div>
</div>
